@using Forces.Application.Enums;
@using Forces.Application.Features.Items.Queries.GetAll;
@using MudBlazor
@using MudBlazor.Utilities
@inject IJSRuntime JSRuntime

@inject Microsoft.Extensions.Localization.IStringLocalizer<AddEditInventoryItemBridgeModal> _localizer
@code {

    private async Task LogToConsole(){

        await JSRuntime.InvokeVoidAsync("console.log", _ItemsList);
    }

    private async Task OpenDialog(GetAllItemsResponse Item)
    {
        if (count == 0 || SelectedInventory == null)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please input at least 1 in the text field or select an item.");
            return;
        }

        InvokNewDialoge(@count,Item);
    }
}

<EditForm Model="@AddEditInventoryItemBridgeModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudDialog>
        <TitleContent>
            @{
                if (AddEditInventoryItemBridgeModel.Id == 0)
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                        @_localizer["Add InventoryItem"]
                    </MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
                        @_localizer["Update InventoryItem"]
                    </MudText>
                }
            }
        </TitleContent>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudTextField Required="true" Immediate="true" T="int"  @bind-Value="count" Label="@_localizer["InventoryItem Name"]" />
                </MudItem>
                
                
                <MudItem xs="12" md="6">
                    <MudGrid>
                        <MudItem xs="12" md="6">
                            <MudSelect Label="Select Inventory" @bind-Value="SelectedInventory">
                                @if (_InventoryList != null)
                                {
                                    @for (int i = 0; i < _InventoryList.Count; i++)
                                    {
                                        <MudSelectItem Value="@_InventoryList[i].Name"></MudSelectItem>

                                    }
                                }
                            </MudSelect>

                        </MudItem>
                        
                    </MudGrid>
                </MudItem>
                
                
        

                <MudItem xs="12" md="6">
                    @if (_ItemsList != null && _ItemsList.Count > 0)
                    {
                        @for (int i = 0; i < _ItemsList.Count; i++)
                        {
                            int currentIndex = i;

                            <div style="display: inline-block; margin-bottom: 10px;margin-left: 20px;">
                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary"
                                   Style="margin-top: 5px;"
                                   OnClick="@(()=> OpenDialog(@_ItemsList[currentIndex]))">
                                    Add (@_ItemsList[currentIndex].ItemName)
                                </MudButton>
                            </div>

                            @if ((i + 1) % 12 == 0 && i != _ItemsList.Count - 1)
                            {
                                <br />
                            }
                        }
                    }
                    else
                    {
                        <p>No items available</p>
                    }
                </MudItem>




            </MudGrid>

        </DialogContent>
        <DialogActions>
            
        </DialogActions>
    </MudDialog>
</EditForm>

